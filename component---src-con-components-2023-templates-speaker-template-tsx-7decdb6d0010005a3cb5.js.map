{"version":3,"sources":["webpack:///./src/con/components/common/Button.tsx","webpack:///./src/con/components/common/SectionTitle.tsx","webpack:///./src/con/data/2023/days.ts","webpack:///./src/con/contexts/SectionsContext.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerSocialList.tsx","webpack:///./src/con/hooks/useEventBriteModal.tsx","webpack:///./src/con/components/templates/SpeakerTemplate.tsx","webpack:///./src/con/components/2022/BuyButton.tsx","webpack:///./src/con/data/2023/nav.ts","webpack:///./src/con/data/2023/footer.ts","webpack:///./src/con/data/2023/meta.ts","webpack:///./src/con/components/2023/layout/index.tsx","webpack:///./src/con/components/2023/Speakers/SpeakerConferenceSlot.tsx","webpack:///./src/con/components/2023/templates/SpeakerTemplate.tsx","webpack:///./src/con/hooks/useConferences.tsx","webpack:///./src/con/utils.tsx"],"names":["Button","children","className","empty","disabled","to","size","external","props","classNames","classnames","small","href","target","rel","SectionTitle","dark","lined","h1","days","date","title","tracks","single","getDayByDate","find","day","SectionsContext","createContext","SpeakerSocialList","speaker","github","twitter","useEventBriteModal","id","isEventBriteLoaded","useContext","ConfContext","useState","isWidgetCreated","setIsWidgetCreated","useLayoutEffect","window","EBWidgets","createWidget","widgetType","eventId","modal","modalTriggerElementId","SpeakerTemplate","SpeakerConferenceSlotComponent","pageContext","extraContent","name","job","company","description","slug","conferences","useConferences","sort","sortByStartDate","data","useStaticQuery","image","getImage","allFile","nodes","imageData","firstname","split","property","content","alt","dangerouslySetInnerHTML","__html","length","map","conference","key","BuyButton","BuyButtonContainer","edition","currentEdition","nav","logoLink","links","text","footer","link","meta","TITLE","DESCRIPTION","OG_IMAGE","process","URL","Layout","logoAlwaysVisible","eventData","url","eventStatus","eventAttendanceMode","startDate","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","pathname","useLocation","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","lastSectionVisible","useEffect","history","replaceState","setIsEventBriteLoaded","s","document","createElement","src","onload","body","appendChild","Provider","value","type","JSON","stringify","defer","LayoutBase","navButton","SpeakerConferenceSlot","start","end","short","track","getConferenceDate","getConferenceTimes","allMarkdownRemark","filter","conferenceData","frontmatter","speakers","includes","fields","collection","headings","conference1","conference2","date1","dayjs","date2","isBefore","isAfter","toLocaleDate","format","convertTime","time","isMorningTime","parseInt"],"mappings":"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","file":"component---src-con-components-2023-templates-speaker-template-tsx-7decdb6d0010005a3cb5.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React, { PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps extends PropsWithChildren {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","const days = [\n  {\n    date: '2023-09-18',\n    title: 'Workshop 1',\n    tracks: null,\n    single: true,\n  },\n  {\n    date: '2023-09-19',\n    title: 'Workshop 2',\n    tracks: null,\n    single: true,\n  },\n  {\n    date: '2023-09-20',\n    title: 'Workshop 3',\n    tracks: null,\n    single: true,\n  },\n  {\n    date: '2023-09-21',\n    title: 'Con day 1',\n    tracks: ['FR', 'EN'],\n    single: false,\n  },\n  {\n    date: '2023-09-22',\n    title: 'Con day 2',\n    tracks: ['FR', 'EN'],\n    single: false,\n  },\n];\n\nexport const getDayByDate = (date) => days.find((day) => day.date === date);\n\nexport default days;\n","import { createContext } from 'react';\n\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nconst SectionsContext = createContext<SectionsContextInterface>(null);\n\nexport default SectionsContext;\n","import React from 'react';\nimport { Speaker } from '@con/types';\n\ninterface SpeakerSocialListProps {\n  speaker: Speaker;\n}\n\nconst SpeakerSocialList: React.ComponentType<SpeakerSocialListProps> = ({ speaker }) => {\n  const { github, twitter } = speaker;\n  return (\n    <div className=\"social__list\">\n      {github && (\n        <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-github\" />\n        </a>\n      )}\n      {twitter && (\n        <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-twitter\" />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default SpeakerSocialList;\n","import { useLayoutEffect, useContext, useState } from 'react';\nimport { ConfContext } from '@con/components/layout';\n\nconst useEventBriteModal: (id: string) => void = (id) => {\n  const { isEventBriteLoaded } = useContext(ConfContext);\n  const [isWidgetCreated, setIsWidgetCreated] = useState(false);\n\n  useLayoutEffect(() => {\n    if (isEventBriteLoaded && !isWidgetCreated) {\n      // @ts-expect-error eventbrite widget\n      window.EBWidgets?.createWidget({\n        widgetType: 'checkout',\n        eventId: '483719928327',\n        modal: true,\n        modalTriggerElementId: id,\n      });\n      setIsWidgetCreated(true);\n    }\n  }, [isEventBriteLoaded, id, isWidgetCreated, setIsWidgetCreated]);\n};\n\nexport default useEventBriteModal;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport SectionTitle from '@con/components/common/SectionTitle';\nimport { PageProps, useStaticQuery, graphql } from 'gatsby';\nimport { getConferenceDate, sortByStartDate } from '@con/utils';\nimport Button from '@con/components/common/Button';\nimport { Conference, Track } from 'src/con/types';\nimport useConferences from '@con/hooks/useConferences';\nimport SpeakerSocialList from '@con/components/2021/Speakers/SpeakerSocialList';\nimport '@con/styles/index.scss';\n\nexport const SpeakerConferenceSlot: React.ComponentType<{ conference: Conference; tracks: Track[] }> = ({\n  tracks,\n  conference,\n}) => {\n  const track = conference.track && tracks.find((t) => t.id === conference.track);\n  const { start, end, date, title, slug, short } = conference;\n  return (\n    <div className=\"speaker__conference-slot dotted-corner\">\n      <div className=\"conference__track\">\n        {track ? (\n          <>\n            {' '}\n            <span className=\"h6\">{`Track #${track.id}`}</span>\n            <span className=\"overline\">{track.type}</span>\n          </>\n        ) : null}\n      </div>\n      <div className=\"conference__content\">\n        <span className=\"overline\">{getConferenceDate(date, start, end)}</span>\n        <h3 className=\"h6 lined lined-left\">{title}</h3>\n        <p>{short}</p>\n        <Button className=\"square\" size=\"small\" to={slug}>\n          See details\n        </Button>\n      </div>\n    </div>\n  );\n};\n\ninterface SpeakerTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    id: string;\n    name: string;\n    slug: string;\n    job: string;\n    company?: string;\n    description: string;\n    twitter?: string;\n    github?: string;\n  };\n  SpeakerConferenceSlotComponent: React.ComponentType<{ conference: Conference }>;\n  extraContent?: JSX.Element;\n}\n\nconst SpeakerTemplate: React.ComponentType<SpeakerTemplateProps> = ({\n  SpeakerConferenceSlotComponent,\n  pageContext,\n  extraContent,\n}) => {\n  const { id, name, job, company, description, slug, twitter, github } = pageContext;\n  const conferences = useConferences(id).sort(sortByStartDate);\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"speakersImages\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 400, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const image = getImage(data.allFile.nodes.find((imageData) => imageData.name === id));\n  const firstname = name.split(' ')[0];\n  return (\n    <div className=\"conf__speaker-profile\">\n      <Helmet>\n        <title>{name}</title>\n        <meta property=\"og:title\" content={name} />\n        <meta name=\"twitter:title\" content={name} />\n      </Helmet>\n\n      <div className=\"speaker__header\">\n        <SectionTitle dark lined h1>\n          <strong>{name}</strong>\n        </SectionTitle>\n        <p className=\"overline speaker__job\">\n          {job}\n          {company ? (\n            <>\n              <strong> @ {company}</strong>\n            </>\n          ) : null}\n        </p>\n      </div>\n      <div className=\"container\">\n        <div className=\"speaker__about\">\n          <div className=\"speaker__picture\">\n            <div className=\"circle__effect\">\n              <GatsbyImage image={image} className=\"circle__picture\" alt={name} />\n            </div>\n          </div>\n          <div className=\"speaker__details\">\n            <div dangerouslySetInnerHTML={{ __html: description }} />\n            <SpeakerSocialList speaker={{ id, description, name, job, slug, github, twitter }} />\n            {extraContent}\n          </div>\n          {0 < conferences.length ? (\n            <div className=\"speaker__schedule\">\n              <h2 className=\"schedule__title h5\">{`${firstname}'s schedule`}</h2>\n              {conferences.map((conference) => (\n                <SpeakerConferenceSlotComponent key={conference.title} conference={conference} />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeakerTemplate;\n","import React, { useContext } from 'react';\nimport { currentEdition } from '@con/data/editions';\nimport useEventBriteModal from '@con/hooks/useEventBriteModal';\nimport Button, { ButtonProps } from '@con/components/common/Button';\nimport { ConfContext } from '../layout';\n\ninterface BuyButtonProps extends ButtonProps {\n  id: string;\n}\n\nconst BuyButton: React.ComponentType<BuyButtonProps> = ({ children, id, ...props }) => {\n  useEventBriteModal(id);\n\n  return (\n    <Button id={id} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nconst BuyButtonContainer: React.ComponentType<BuyButtonProps> = (props) => {\n  const { edition } = useContext(ConfContext);\n  if (edition !== currentEdition) return <></>;\n  return <BuyButton {...props} />;\n};\n\nexport default BuyButtonContainer;\n","const nav = {\n  logoLink: '/',\n  links: [\n    {\n      to: '/con/editions/',\n      text: 'Previous editions',\n    },\n    {\n      to: '/con/2023/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2023/#pricing',\n      text: 'Pricing',\n    },\n    {\n      to: '/con/2023/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2023/#sponsorship',\n      text: 'Sponsorship',\n    },\n  ],\n};\n\nexport default nav;\n","const footer = [\n  {\n    title: 'Previous edition',\n    links: [\n      {\n        title: '2022 review',\n        link: '/con/2022/review',\n      },\n      {\n        title: '2022 archive',\n        link: '/con/2022/',\n      },\n      {\n        title: 'All previous editions',\n        link: '/con/editions/',\n      },\n    ],\n  },\n  {\n    title: 'The event',\n    links: [\n      {\n        title: 'Speakers',\n        link: '/con/2023/speakers',\n      },\n      {\n        title: 'Venue',\n        link: '/con/2023/#venue',\n      },\n      {\n        title: 'Pricing',\n        link: '/con/2023/#pricing',\n      },\n    ],\n  },\n  {\n    title: 'Legal',\n    links: [\n      {\n        title: 'Code of conduct',\n        link: '/con/2023/code-of-conduct',\n      },\n      {\n        title: 'FAQ',\n        link: '/con/2023/faq',\n      },\n      {\n        title: 'Transparency',\n        link: '/con/2023/transparency',\n      },\n    ],\n  },\n];\n\nexport default footer;\n","export const TITLE = 'API Platform Conference 2023';\nexport const DESCRIPTION = 'The international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook-2023.png`;\nexport const URL = 'https://api-platform.com/con/2023/';\nconst meta = {\n  TITLE,\n  DESCRIPTION,\n  OG_IMAGE,\n  URL,\n};\n\nexport default meta;\n","import React, { useState, useMemo, useEffect, PropsWithChildren } from 'react';\nimport Helmet from 'react-helmet';\nimport nav from '@con/data/2023/nav';\nimport footer from '@con/data/2023/footer';\nimport { ConfContext } from '@con/components/layout';\nimport SectionsContext from '@con/contexts/SectionsContext';\nimport { useLocation } from '@reach/router';\nimport meta from '@con/data/2023/meta';\nimport LayoutBase from '@con/components/layout/LayoutBase';\nimport BuyButton from '@con/components/2022/BuyButton';\n\ninterface LayoutProps extends PropsWithChildren {\n  logoAlwaysVisible?: boolean;\n}\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2023',\n    description: 'The international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2023/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2023-09-21',\n    endDate: '2023-09-22',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2023/',\n      },\n    ],\n    image: meta.OG_IMAGE,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    const lastSectionVisible = sectionsVisibles?.[sectionsVisibles.length - 1];\n    if (!lastSectionVisible || 'home' === lastSectionVisible) return pathname;\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  useEffect(() => {\n    window.history.replaceState({}, '', activeLink);\n  }, [activeLink]);\n\n  const [isEventBriteLoaded, setIsEventBriteLoaded] = useState(false);\n\n  useEffect(() => {\n    const s = document.createElement('script');\n    s.src = 'https://www.eventbrite.com/static/widgets/eb_widgets.js';\n    s.onload = () => {\n      setIsEventBriteLoaded(true);\n    };\n    document.body.appendChild(s);\n  }, [setIsEventBriteLoaded]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink, edition: '2023', isEventBriteLoaded }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n        </Helmet>\n        <LayoutBase\n          edition=\"2023\"\n          meta={meta}\n          logoAlwaysVisible={logoAlwaysVisible}\n          footer={footer}\n          navButton={\n            <BuyButton className=\"pink\" size=\"small\" id=\"nav\">\n              Buy tickets\n            </BuyButton>\n          }\n        >\n          {children}\n        </LayoutBase>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { getConferenceDate, getConferenceTimes } from '@con/utils';\nimport Button from '@con/components/common/Button';\nimport { Conference, Track } from 'src/con/types';\nimport { getDayByDate } from '@con/data/2023/days';\n\nconst SpeakerConferenceSlot: React.ComponentType<{ conference: Conference; tracks: Track[] }> = ({ conference }) => {\n  const day = getDayByDate(conference.date);\n  const { start, end, date, title, slug, short, track } = conference;\n  return (\n    <div className=\"speaker__conference-slot dotted-corner\">\n      <div className=\"conference__track\">\n        {date ? (\n          <>\n            {' '}\n            <span className=\"h6\">\n              {day.title}\n              {track ? (\n                <>\n                  <br /> {`Track #${track}`}\n                </>\n              ) : null}\n            </span>\n            <span className=\"overline\">{getConferenceDate(date)}</span>\n          </>\n        ) : null}\n      </div>\n      <div className=\"conference__content\">\n        {date && <span className=\"overline\">{getConferenceTimes(date, start, end)}</span>}\n        <h3 className=\"h6 lined lined-left\">{title}</h3>\n        <p>{short}</p>\n        <Button className=\"square\" size=\"small\" to={slug}>\n          See details\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeakerConferenceSlot;\n","import React from 'react';\nimport Layout from '@con/components/2023/layout';\nimport { PageProps } from 'gatsby';\nimport SpeakerTemplateBase from '@con/components/templates/SpeakerTemplate';\nimport SpeakerConferenceSlot from '@con/components/2023/Speakers/SpeakerConferenceSlot';\nimport BuyButton from '@con/components/2022/BuyButton';\n\ninterface SpeakerTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    id: string;\n    name: string;\n    slug: string;\n    job: string;\n    company: string;\n    description: string;\n    edition: string;\n  };\n}\n\nconst SpeakerTemplate: React.ComponentType<SpeakerTemplateProps> = (props) => {\n  const { pageContext } = props;\n  return (\n    <Layout logoAlwaysVisible>\n      <SpeakerTemplateBase\n        {...props}\n        SpeakerConferenceSlotComponent={SpeakerConferenceSlot}\n        extraContent={\n          <BuyButton className=\"mt-20 pink square\" id={pageContext.name} size=\"large\">\n            Get your ticket!\n          </BuyButton>\n        }\n      />\n    </Layout>\n  );\n};\n\nexport default SpeakerTemplate;\n","import { useContext } from 'react';\nimport { ConfContext } from '@con/components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Conference } from 'src/con/types';\n\nconst useConferences: (speaker?: string) => Conference[] = (speaker) => {\n  const { edition } = useContext(ConfContext);\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(limit: 1000, filter: { frontmatter: { type: { eq: \"conference\" } } }) {\n        nodes {\n          frontmatter {\n            title\n            speakers\n            track\n            start\n            date\n            end\n            short\n            github\n          }\n          headings(depth: h1) {\n            value\n          }\n          fields {\n            slug\n            collection\n          }\n        }\n      }\n    }\n  `);\n\n  const conferences = data.allMarkdownRemark.nodes\n    .filter((conferenceData) => !speaker || conferenceData.frontmatter.speakers.includes(speaker))\n    .filter((conferenceData) => conferenceData.fields.collection === `con${edition}`)\n    .map((conference) => ({\n      ...conference.frontmatter,\n      title: conference.headings?.[0].value,\n      slug: `/con/${edition}${conference.fields.slug}`,\n    }));\n\n  return conferences;\n};\n\nexport default useConferences;\n","import dayjs from 'dayjs';\nimport { Conference } from './types';\n\nexport const sortByStartDate: (conference1: Conference, conference2: Conference) => 1 | -1 | 0 = (\n  conference1,\n  conference2\n) => {\n  const date1 = conference1.start ? dayjs(`${conference1.date}T${conference1.start}`) : dayjs();\n  const date2 = conference2.start ? dayjs(`${conference2.date}T${conference2.start}`) : dayjs();\n  if (date1.isBefore(date2)) return -1;\n  if (date1.isAfter(date2)) return 1;\n  return 0;\n};\nexport const toLocaleDate: (date: string) => string = (date) => dayjs(date).format('ll');\n\nexport const convertTime: (date: string, time: string) => string = (date, time) =>\n  dayjs(`${date}T${time}`).format('HH:mm A');\n\nexport const isMorningTime: (time?: string) => boolean = (time) => time && 12 >= parseInt(time.split(':')[0], 10);\n\nexport const getConferenceTimes: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${convertTime(date, start)} - ${convertTime(date, end)}` : toLocaleDate(date);\n\nexport const getConferenceDate: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${toLocaleDate(date)} · ${getConferenceTimes(date, start, end)}` : toLocaleDate(date);\n"],"sourceRoot":""}