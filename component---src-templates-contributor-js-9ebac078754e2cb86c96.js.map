{"version":3,"sources":["webpack:///./src/components/common/Grid.js","webpack:///./src/con/hooks/useContributorConferences.tsx","webpack:///./src/con/components/2021/ContributorConference/index.tsx","webpack:///./src/templates/contributor.js","webpack:///./src/helpers/contributorHelper.js"],"names":["Grid","left","children","className","classnames","defaultProps","GridItem","padding","limitWidth","full","autosize","auto","useContributorConferences","login","data","useStaticQuery","conferences","nodes","filter","conferenceData","frontmatter","speakers","substr","replace","split","some","id","edition","find","speakerData","fields","collection","github","isSpeakerContributor","map","conference","title","headings","value","slug","ContributorConference","ids","allMarkdownRemark","includes","speaker","href","Web","src","Logo","alt","width","height","index","key","name","length","externalLinkAttributes","GithubInfo","icon","link","githubLink","charAt","substring","rel","target","Template","text","location","contributor","pageContext","repositoryCount","projects","repositoryText","contributorName","getName","Layout","position","avatar","isCoreTeam","bio","dangerouslySetInnerHTML","__html","url","githubResource","trim","company","blog","to","contributions","reposName","p","lastRepo","pop","join","getProjectsText","project","fullName","additions","deletions","teams"],"mappings":"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","file":"component---src-templates-contributor-js-9ebac078754e2cb86c96.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport const Grid = ({ left, children, className }) => (\n  <div className={classnames(className, 'grid__container', { left })}>{children}</div>\n);\n\nGrid.propTypes = {\n  left: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nGrid.defaultProps = {\n  left: false,\n  className: '',\n};\n\nexport const GridItem = ({ className, padding, limitWidth, full, children, autosize }) => (\n  <div\n    className={classnames(className, 'grid__item', {\n      [`p-${padding}`]: !!padding || 0 === padding,\n      'no-min': !limitWidth,\n      auto: autosize,\n      full,\n    })}\n  >\n    {children}\n  </div>\n);\n\nGridItem.propTypes = {\n  full: PropTypes.bool,\n  padding: PropTypes.number,\n  limitWidth: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  autosize: PropTypes.bool,\n};\n\nGridItem.defaultProps = {\n  full: false,\n  limitWidth: true,\n  padding: null,\n  className: '',\n  autosize: false,\n};\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { Conference } from 'src/con/types';\n\nconst useContributorConferences: (login?: string) => Conference[] = (login) => {\n  const data = useStaticQuery(graphql`\n    query {\n      conferences: allMarkdownRemark(limit: 100, filter: { frontmatter: { type: { eq: \"conference\" } } }) {\n        nodes {\n          frontmatter {\n            title\n            speakers\n            track\n            start\n            end\n            short\n          }\n          headings(depth: h1) {\n            value\n          }\n          fields {\n            slug\n            collection\n          }\n        }\n      }\n      speakers: allMarkdownRemark(limit: 100, filter: { frontmatter: { type: { eq: \"speaker\" } } }) {\n        nodes {\n          frontmatter {\n            id\n            github\n          }\n          fields {\n            collection\n          }\n        }\n      }\n    }\n  `);\n\n  const isSpeakerContributor = (id: string, edition: string) => {\n    return (\n      data.speakers.nodes.find(\n        (speakerData) => speakerData.frontmatter.id === id && speakerData.fields.collection === edition\n      )?.frontmatter.github === login\n    );\n  };\n\n  const conferences = data.conferences.nodes\n    .filter((conferenceData) =>\n      conferenceData.frontmatter.speakers\n        .substr(1)\n        .replace(' -', ' ')\n        .split(' ')\n        .some((id) => isSpeakerContributor(id, conferenceData.fields.collection))\n    )\n    .map((conference) => ({\n      ...conference.frontmatter,\n      edition: conference.fields.collection.replace('con', ''),\n      title: conference.headings?.[0].value,\n      slug: `/con/${conference.fields.collection.replace('con', '')}${conference.fields.slug}`,\n    }));\n\n  return conferences;\n};\n\nexport default useContributorConferences;\n","import React, { Fragment } from 'react';\nimport Web from '@con/components/common/Web';\nimport { Conference } from 'src/con/types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Logo from '@con/images/logo.svg';\n\nconst ContributorConference: React.ComponentType<{ conference: Conference }> = ({ conference }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        limit: 1000\n        filter: { frontmatter: { type: { eq: \"speaker\" } } }\n        sort: { fields: frontmatter___id, order: ASC }\n      ) {\n        nodes {\n          fields {\n            slug\n            collection\n          }\n          frontmatter {\n            name\n            id\n            job\n            company\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `);\n  const ids = conference.speakers;\n  const speakers = data.allMarkdownRemark.nodes\n    .filter((speakerData) => !ids || ids.includes(speakerData.frontmatter.id))\n    .filter((speakerData) => speakerData.fields.collection.includes(conference.edition))\n    .map((speaker) => ({\n      ...speaker.frontmatter,\n      slug: `/con/${conference.edition}${speaker.fields.slug}`,\n    }));\n\n  return (\n    <a href={conference.slug} className=\"contributor__conference card clickable\">\n      <Web className=\"web\" />\n      <div className=\"conference__content\">\n        <div className=\"conference__logo relative\">\n          <img src={Logo} alt=\"API Platform Conference\" width=\"200\" height=\"80\" />\n          <div className=\"conference__edition\">{conference.edition}</div>\n        </div>\n        <span className=\"conference__title lined\">{conference.title}</span>\n        <p className=\"conference__speaker h6\">\n          {speakers.map((speaker, index) => (\n            <Fragment key={speaker.name}>\n              <strong>{speaker.name}</strong>\n              {index < speakers.length - 2 && ', '}\n              {index === speakers.length - 2 && ' & '}\n            </Fragment>\n          ))}\n        </p>\n      </div>\n    </a>\n  );\n};\n\nexport default ContributorConference;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport useContributorConferences from '@con/hooks/useContributorConferences';\nimport Layout from '@components/Layout';\nimport { Link } from 'gatsby';\nimport { Grid, GridItem } from '@components/common/Grid';\nimport ContributorConference from '@con/components/2021/ContributorConference';\nimport { isCoreTeam, getName } from '../helpers/contributorHelper';\n\nconst externalLinkAttributes = 'target=\"_blank\" rel=\"nofollow noopener noreferrer\"';\n\nconst parseGithubText = (text) => {\n  const urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/gi;\n\n  const linkifyText = text.replace(urlRegex, (url) => `<a href=\"${url}\" ${externalLinkAttributes}\">${url}</a>`);\n  const githubRegex = /(^|\\s)@([a-zA-Z-]+)/gi;\n\n  return linkifyText.replace(\n    githubRegex,\n    (githubResource) =>\n      `<a href=\"https://github.com/${githubResource\n        .trim()\n        .replace('@', '')}\" ${externalLinkAttributes}\">${githubResource}</a>`\n  );\n};\n\nconst GithubInfo = ({ value, icon, link }) => {\n  const githubLink = '@' === value.charAt(0) ? `https://github.com/${value.substring(1)}` : null;\n\n  if (link || githubLink) {\n    return (\n      <a rel=\"nofollow noopener noreferrer\" target=\"_blank\" href={link || githubLink} className=\"contributor__info\">\n        <span className={`icon-${icon}`} />\n        {'@' === value.charAt(0) ? value.substring(1) : value}\n      </a>\n    );\n  }\n\n  return (\n    <p className=\"contributor__info\">\n      <span className={`icon-${icon}`} />\n      {value}\n    </p>\n  );\n};\n\nGithubInfo.propTypes = {\n  value: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  link: PropTypes.string,\n};\n\nGithubInfo.defaultProps = {\n  link: null,\n};\n\nconst Template = ({ location, pageContext: contributor }) => {\n  const repositoryCount = contributor.projects.length;\n\n  const repositoryText = 1 < repositoryCount ? `${repositoryCount} repositories` : `${repositoryCount} repository`;\n\n  const contributorName = getName(contributor);\n\n  const getContributionsText = () => {\n    if (10 >= contributor.position) {\n      return `${\n        isCoreTeam(contributor) ? 'As an API Platform core team member, ' : ''\n      }${contributorName} is one of the most active contributors to the API Platform framework and worked on`;\n    }\n    if (20 < contributor.contributions) {\n      return `${\n        isCoreTeam(contributor) ? 'As an API Platform core team member, ' : ''\n      }${contributorName} enhanced the API Platform framework with no less than ${\n        contributor.contributions\n      } contributions. This active contributor worked on`;\n    }\n    return `${contributorName} is a ${\n      isCoreTeam(contributor) ? 'core team member and a ' : ''\n    }contributor to the API Platform framework and worked on`;\n  };\n\n  const getProjectsText = () => {\n    if (!repositoryCount) return '';\n    const reposName = contributor.projects.map((p) => `<a href=\"${p.link}\" ${externalLinkAttributes}>${p.name}</a>`);\n    if (1 === reposName.length) return reposName[0];\n    const lastRepo = reposName.pop();\n    return `${reposName.join(', ')} and ${lastRepo}`;\n  };\n\n  /* API PLATFORM CON */\n  const conferences = useContributorConferences(`https://github.com/${contributor.login}`);\n\n  return (\n    <Layout location={location}>\n      <div className=\"contributor\">\n        <Helmet title={`${contributorName}, API Platform contributor`} />\n        <header className=\"contributor__header bg-blue-extralight\">\n          <div className=\"container\">\n            <div className=\"header__content\">\n              <p className=\"h1-like header__title color-blue-dark\">{`Contributor #${contributor.position}`}</p>\n            </div>\n          </div>\n        </header>\n        <section>\n          <div className=\"container contributor__main\">\n            <div className=\"contributor__card\">\n              <div className=\"card__top bg-blue-dark color-white\">\n                <div className=\"contributor__picture\">\n                  <div className=\"avatar crop\">\n                    <img src={contributor.avatar} alt={contributor.login} />\n                  </div>\n                  {isCoreTeam(contributor) && (\n                    <img\n                      className=\"contributor__badge\"\n                      src=\"/badges/core-team.svg\"\n                      alt=\"core-team\"\n                      title=\"Core team member\"\n                    />\n                  )}\n                </div>\n                <div className=\"card__content\">\n                  <h1 className=\"h1-like color-white\">{contributorName}</h1>\n                  <p className=\"contributor__subtitle color-blue-extralight\">{`(${contributor.login})`}</p>\n                  {contributor.bio && (\n                    <p\n                      className=\"contributor__bio\"\n                      dangerouslySetInnerHTML={{\n                        __html: parseGithubText(contributor.bio),\n                      }}\n                    />\n                  )}\n                  <div className=\"contributor__infos\">\n                    {contributor.location && <GithubInfo icon=\"location\" value={contributor.location} />}\n                    {contributor.company && <GithubInfo icon=\"office\" value={contributor.company} />}\n                    {contributor.blog && <GithubInfo icon=\"sphere\" link={contributor.blog} value=\"website\" />}\n                    <GithubInfo icon=\"github\" value={`@${contributor.login}`} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"contributor__content\">\n              {conferences.length ? (\n                <div className=\"contributor__conferences\">\n                  {conferences.length && (\n                    <p className=\"text-big\">\n                      <span>{`Don't miss ${contributorName}'s talk(s) at the `}</span>\n                      <Link to=\"/con/\">API Platform Conference</Link>\n                      <span>!</span>\n                    </p>\n                  )}\n                  <div className=\"contributor__conferences-list conf\">\n                    {conferences.map((conference) => (\n                      <ContributorConference conference={conference} />\n                    ))}\n                  </div>\n                </div>\n              ) : null}\n              <div className=\"contributor__description\">\n                <p\n                  className=\"text-big\"\n                  dangerouslySetInnerHTML={{\n                    __html: `${getContributionsText()} ${repositoryText}: ${getProjectsText()}.`,\n                  }}\n                />\n              </div>\n              <Grid className=\"contributor__projects\">\n                {contributor.projects.map((project) => (\n                  <GridItem padding={5}>\n                    <a\n                      href={`https://github.com/${project.fullName}/commits?author=${contributor.login}`}\n                      className=\"contributor__project card p-10 clickable\"\n                      rel=\"nofollow noopener noreferrer\"\n                      target=\"_blank\"\n                    >\n                      <p className=\"project__name text-big\">\n                        <span className=\"icon-github\" />\n                        {project.name}\n                      </p>\n                      <p className=\"project__contributions text-xs\">{`${project.contributions} ${\n                        1 < project.contributions ? 'contributions' : 'contribution'\n                      }`}</p>\n                      <p className=\"project__lines text-xs\">\n                        {project.additions || project.deletions ? (\n                          <>\n                            <span>{`${project.additions}++`}</span>\n                            <span>{`${project.deletions}--`}</span>\n                          </>\n                        ) : (\n                          <span className=\"no-stat\">(no stats)</span>\n                        )}\n                      </p>\n                    </a>\n                  </GridItem>\n                ))}\n              </Grid>\n            </div>\n          </div>\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Template;\n\nTemplate.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired,\n};\n","export const isCoreTeam = (contributor) =>\n  contributor.teams &&\n  (contributor.teams.includes('core-team') ||\n    contributor.teams.includes('core-team-js') ||\n    contributor.teams.includes('core-team-website'));\n\nexport const getName = (contributor) => contributor.name || contributor.login;\n"],"sourceRoot":""}