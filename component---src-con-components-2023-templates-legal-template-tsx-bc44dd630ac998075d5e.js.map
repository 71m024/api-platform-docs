{"version":3,"sources":["webpack:///./src/con/components/common/Button.tsx","webpack:///./src/con/components/templates/LegalTemplate.tsx","webpack:///./src/con/components/common/SectionTitle.tsx","webpack:///./src/con/contexts/SectionsContext.tsx","webpack:///./src/con/hooks/useEventBriteModal.tsx","webpack:///./src/con/components/2023/templates/LegalTemplate.tsx","webpack:///./src/con/components/2022/BuyButton.tsx","webpack:///./src/con/data/2023/nav.ts","webpack:///./src/con/data/2023/footer.ts","webpack:///./src/con/data/2023/meta.ts","webpack:///./src/con/components/2023/layout/index.tsx"],"names":["Button","children","className","empty","disabled","to","size","external","props","classNames","classnames","small","href","target","rel","LegalTemplate","pageContext","html","title","edition","htmlWithLinks","replace","property","content","name","dark","lined","h1","dangerouslySetInnerHTML","__html","SectionTitle","SectionsContext","createContext","useEventBriteModal","id","isEventBriteLoaded","useContext","ConfContext","useState","isWidgetCreated","setIsWidgetCreated","useLayoutEffect","window","EBWidgets","createWidget","widgetType","eventId","modal","modalTriggerElementId","logoAlwaysVisible","BuyButton","BuyButtonContainer","currentEdition","nav","logoLink","links","text","footer","link","meta","TITLE","DESCRIPTION","OG_IMAGE","process","URL","Layout","eventData","description","url","eventStatus","eventAttendanceMode","startDate","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","image","pathname","useLocation","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","lastSectionVisible","length","useEffect","history","replaceState","setIsEventBriteLoaded","s","document","createElement","src","onload","body","appendChild","Provider","value","type","JSON","stringify","defer","LayoutBase","navButton"],"mappings":"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","file":"component---src-con-components-2023-templates-legal-template-tsx-bc44dd630ac998075d5e.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { PageProps } from 'gatsby';\nimport ContactCard from '@con/components/common/ContactCard';\nimport SectionTitle from '@con/components/common/SectionTitle';\nimport '@con/styles/index.scss';\n\ninterface LegalTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    edition: string;\n  };\n}\n\nconst LegalTemplate: React.ComponentType<LegalTemplateProps> = ({ pageContext }) => {\n  const { html, title, edition } = pageContext;\n  const htmlWithLinks = html.replace(/href=\"#/g, `href=\"/con/${edition}#`).replace(/href=\"\\/\\//g, 'href=\"/'); // fix home anchors links\n\n  return (\n    <div className=\"conf__legal\">\n      <Helmet>\n        <title>{title}</title>\n        <meta property=\"og:title\" content={title} />\n        <meta name=\"twitter:title\" content={title} />\n      </Helmet>\n\n      <div className=\"container\">\n        <div className=\"legal__header\">\n          <SectionTitle dark lined h1>\n            <strong>{title}</strong>\n          </SectionTitle>\n        </div>\n        <div className=\"legal__content dotted-corner\">\n          <div className=\"conference__abstract\" dangerouslySetInnerHTML={{ __html: htmlWithLinks }} />\n        </div>\n        <div className=\"conf__contact\">\n          <ContactCard />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LegalTemplate;\n","import React, { PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps extends PropsWithChildren {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","import { createContext } from 'react';\n\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nconst SectionsContext = createContext<SectionsContextInterface>(null);\n\nexport default SectionsContext;\n","import { useLayoutEffect, useContext, useState } from 'react';\nimport { ConfContext } from '@con/components/layout';\n\nconst useEventBriteModal: (id: string) => void = (id) => {\n  const { isEventBriteLoaded } = useContext(ConfContext);\n  const [isWidgetCreated, setIsWidgetCreated] = useState(false);\n\n  useLayoutEffect(() => {\n    if (isEventBriteLoaded && !isWidgetCreated) {\n      // @ts-expect-error eventbrite widget\n      window.EBWidgets?.createWidget({\n        widgetType: 'checkout',\n        eventId: '483719928327',\n        modal: true,\n        modalTriggerElementId: id,\n      });\n      setIsWidgetCreated(true);\n    }\n  }, [isEventBriteLoaded, id, isWidgetCreated, setIsWidgetCreated]);\n};\n\nexport default useEventBriteModal;\n","import React from 'react';\nimport { PageProps } from 'gatsby';\nimport Layout from '@con/components/2023/layout';\nimport LegalTemplateBase from '@con/components/templates/LegalTemplate';\n\ninterface LegalTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    edition: string;\n  };\n}\n\nconst LegalTemplate: React.ComponentType<LegalTemplateProps> = (props) => {\n  return (\n    <Layout logoAlwaysVisible>\n      <LegalTemplateBase {...props} />\n    </Layout>\n  );\n};\n\nexport default LegalTemplate;\n","import React, { useContext } from 'react';\nimport { currentEdition } from '@con/data/editions';\nimport useEventBriteModal from '@con/hooks/useEventBriteModal';\nimport Button, { ButtonProps } from '@con/components/common/Button';\nimport { ConfContext } from '../layout';\n\ninterface BuyButtonProps extends ButtonProps {\n  id: string;\n}\n\nconst BuyButton: React.ComponentType<BuyButtonProps> = ({ children, id, ...props }) => {\n  useEventBriteModal(id);\n\n  return (\n    <Button id={id} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nconst BuyButtonContainer: React.ComponentType<BuyButtonProps> = (props) => {\n  const { edition } = useContext(ConfContext);\n  if (edition !== currentEdition) return <></>;\n  return <BuyButton {...props} />;\n};\n\nexport default BuyButtonContainer;\n","const nav = {\n  logoLink: '/',\n  links: [\n    {\n      to: '/con/editions/',\n      text: 'Previous editions',\n    },\n    {\n      to: '/con/2023/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2023/#pricing',\n      text: 'Pricing',\n    },\n    {\n      to: '/con/2023/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2023/#partners',\n      text: 'Partners',\n    },\n  ],\n};\n\nexport default nav;\n","const footer = [\n  {\n    title: 'Previous edition',\n    links: [\n      {\n        title: '2022 review',\n        link: '/con/2022/review',\n      },\n      {\n        title: '2022 archive',\n        link: '/con/2022/',\n      },\n      {\n        title: 'All previous editions',\n        link: '/con/editions/',\n      },\n    ],\n  },\n  {\n    title: 'The event',\n    links: [\n      {\n        title: 'Speakers',\n        link: '/con/2023/speakers',\n      },\n      {\n        title: 'Venue',\n        link: '/con/2023/#venue',\n      },\n      {\n        title: 'Pricing',\n        link: '/con/2023/#pricing',\n      },\n    ],\n  },\n  {\n    title: 'Legal',\n    links: [\n      {\n        title: 'Code of conduct',\n        link: '/con/2023/code-of-conduct',\n      },\n      {\n        title: 'FAQ',\n        link: '/con/2023/faq',\n      },\n      {\n        title: 'Transparency',\n        link: '/con/2023/transparency',\n      },\n    ],\n  },\n];\n\nexport default footer;\n","export const TITLE = 'API Platform Conference 2023';\nexport const DESCRIPTION = 'The international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook-2023.png`;\nexport const URL = 'https://api-platform.com/con/2023/';\nconst meta = {\n  TITLE,\n  DESCRIPTION,\n  OG_IMAGE,\n  URL,\n};\n\nexport default meta;\n","import React, { useState, useMemo, useEffect, PropsWithChildren } from 'react';\nimport Helmet from 'react-helmet';\nimport nav from '@con/data/2023/nav';\nimport footer from '@con/data/2023/footer';\nimport { ConfContext } from '@con/components/layout';\nimport SectionsContext from '@con/contexts/SectionsContext';\nimport { useLocation } from '@reach/router';\nimport meta from '@con/data/2023/meta';\nimport LayoutBase from '@con/components/layout/LayoutBase';\nimport BuyButton from '@con/components/2022/BuyButton';\n\ninterface LayoutProps extends PropsWithChildren {\n  logoAlwaysVisible?: boolean;\n}\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2023',\n    description: 'The international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2023/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2023-09-21',\n    endDate: '2023-09-22',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2023/',\n      },\n    ],\n    image: meta.OG_IMAGE,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    const lastSectionVisible = sectionsVisibles?.[sectionsVisibles.length - 1];\n    if (!lastSectionVisible || 'home' === lastSectionVisible) return pathname;\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  useEffect(() => {\n    window.history.replaceState({}, '', activeLink);\n  }, [activeLink]);\n\n  const [isEventBriteLoaded, setIsEventBriteLoaded] = useState(false);\n\n  useEffect(() => {\n    const s = document.createElement('script');\n    s.src = 'https://www.eventbrite.com/static/widgets/eb_widgets.js';\n    s.onload = () => {\n      setIsEventBriteLoaded(true);\n    };\n    document.body.appendChild(s);\n  }, [setIsEventBriteLoaded]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink, edition: '2023', isEventBriteLoaded }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n        </Helmet>\n        <LayoutBase\n          edition=\"2023\"\n          meta={meta}\n          logoAlwaysVisible={logoAlwaysVisible}\n          footer={footer}\n          navButton={\n            <BuyButton className=\"pink\" size=\"small\" id=\"nav\">\n              Buy tickets\n            </BuyButton>\n          }\n        >\n          {children}\n        </LayoutBase>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}